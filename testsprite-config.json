{
  "projectName": "Personal Dashboard",
  "version": "1.0.0",
  "description": "A comprehensive web application for managing Amazon accounts and electricity bills",
  "testConfigurations": {
    "frontend": {
      "name": "Frontend Testing",
      "type": "frontend",
      "framework": "react",
      "buildTool": "vite",
      "port": 5174,
      "baseUrl": "http://localhost:5174",
      "testFiles": [
        "frontend/src/**/*.test.js",
        "frontend/src/**/*.test.jsx",
        "frontend/src/**/*.spec.js",
        "frontend/src/**/*.spec.jsx"
      ],
      "sourceFiles": [
        "frontend/src/**/*.js",
        "frontend/src/**/*.jsx"
      ],
      "dependencies": {
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "react-router-dom": "^6.8.0",
        "zustand": "^4.3.0",
        "axios": "^1.3.0",
        "react-hot-toast": "^2.4.0",
        "react-icons": "^4.7.0"
      },
      "testScripts": {
        "test": "npm run test",
        "test:watch": "npm run test:watch",
        "test:coverage": "npm run test:coverage"
      },
      "environmentVariables": {
        "VITE_API_URL": "http://localhost:4000"
      }
    },
    "backend": {
      "name": "Backend Testing",
      "type": "backend",
      "framework": "express",
      "runtime": "node",
      "port": 4000,
      "baseUrl": "http://localhost:4000",
      "testFiles": [
        "backend/src/**/*.test.js",
        "backend/src/**/*.spec.js"
      ],
      "sourceFiles": [
        "backend/src/**/*.js"
      ],
      "dependencies": {
        "express": "^4.18.0",
        "mongoose": "^7.0.0",
        "jsonwebtoken": "^9.0.0",
        "bcryptjs": "^2.4.3",
        "cors": "^2.8.5",
        "helmet": "^6.0.0",
        "express-rate-limit": "^6.7.0",
        "playwright": "^1.30.0",
        "twilio": "^4.23.0",
        "nodemailer": "^6.9.0"
      },
      "testScripts": {
        "test": "npm run test",
        "test:watch": "npm run test:watch",
        "test:coverage": "npm run test:coverage"
      },
      "environmentVariables": {
        "MONGODB_URI": "mongodb://localhost:27017/personal-dashboard-test",
        "JWT_SECRET": "test-secret-key",
        "JWT_REFRESH_SECRET": "test-refresh-secret",
        "NODE_ENV": "test"
      }
    }
  },
  "testScenarios": [
    {
      "name": "Authentication Flow",
      "description": "Test user registration, login, and password reset",
      "priority": "high",
      "testCases": [
        {
          "name": "User Registration",
          "description": "Test valid user registration with all required fields",
          "steps": [
            "Navigate to registration page",
            "Fill in valid user details",
            "Submit registration form",
            "Verify successful registration",
            "Check user data in database"
          ]
        },
        {
          "name": "User Login",
          "description": "Test user login with valid credentials",
          "steps": [
            "Navigate to login page",
            "Enter valid email/username and password",
            "Submit login form",
            "Verify successful login",
            "Check JWT token generation"
          ]
        },
        {
          "name": "Password Reset",
          "description": "Test password reset via SMS OTP",
          "steps": [
            "Navigate to forgot password page",
            "Enter valid mobile number",
            "Request OTP",
            "Enter valid OTP",
            "Set new password",
            "Verify password change"
          ]
        }
      ]
    },
    {
      "name": "Amazon Account Management",
      "description": "Test Amazon account addition and balance tracking",
      "priority": "high",
      "testCases": [
        {
          "name": "Add Amazon Account",
          "description": "Test adding a new Amazon account",
          "steps": [
            "Navigate to Amazon dashboard",
            "Click 'Add Amazon Account'",
            "Enter valid Amazon credentials",
            "Submit account details",
            "Verify account addition",
            "Check web scraping success"
          ]
        },
        {
          "name": "Refresh Balance",
          "description": "Test balance refresh functionality",
          "steps": [
            "Navigate to Amazon dashboard",
            "Click refresh button on account",
            "Verify balance update",
            "Check database record update"
          ]
        }
      ]
    },
    {
      "name": "Electricity Bill Management",
      "description": "Test electricity service registration and bill tracking",
      "priority": "high",
      "testCases": [
        {
          "name": "Add Electricity Service",
          "description": "Test adding a new electricity service",
          "steps": [
            "Navigate to electricity dashboard",
            "Click 'Add Service'",
            "Enter service number and consumer name",
            "Submit service details",
            "Verify service addition",
            "Check database record creation"
          ]
        },
        {
          "name": "Refresh Bill Data",
          "description": "Test bill data refresh functionality",
          "steps": [
            "Navigate to electricity dashboard",
            "Click refresh button on service",
            "Verify bill data update",
            "Check payment status determination"
          ]
        }
      ]
    },
    {
      "name": "User Profile Management",
      "description": "Test user profile editing and settings",
      "priority": "medium",
      "testCases": [
        {
          "name": "Edit Profile",
          "description": "Test profile information editing",
          "steps": [
            "Navigate to profile page",
            "Click edit profile button",
            "Update personal information",
            "Save changes",
            "Verify profile update"
          ]
        },
        {
          "name": "Change Password",
          "description": "Test password change functionality",
          "steps": [
            "Navigate to profile page",
            "Click change password button",
            "Enter current and new passwords",
            "Submit password change",
            "Verify password update"
          ]
        }
      ]
    },
    {
      "name": "UI/UX Testing",
      "description": "Test user interface and user experience",
      "priority": "medium",
      "testCases": [
        {
          "name": "Responsive Design",
          "description": "Test responsive design across devices",
          "steps": [
            "Test mobile viewport (375px)",
            "Test tablet viewport (768px)",
            "Test desktop viewport (1920px)",
            "Verify layout adaptation",
            "Check touch targets"
          ]
        },
        {
          "name": "Error Handling",
          "description": "Test error handling and user feedback",
          "steps": [
            "Test network error scenarios",
            "Test validation error display",
            "Test server error responses",
            "Verify error message clarity",
            "Check recovery actions"
          ]
        }
      ]
    }
  ],
  "testData": {
    "users": [
      {
        "name": "Test User",
        "email": "test@example.com",
        "username": "testuser",
        "phone": "9876543210",
        "password": "TestPassword123!",
        "userType": "Free",
        "subscription": "Free"
      },
      {
        "name": "Admin User",
        "email": "admin@example.com",
        "username": "admin",
        "phone": "9876543211",
        "password": "AdminPassword123!",
        "userType": "Admin",
        "subscription": "Admin"
      }
    ],
    "amazonAccounts": [
      {
        "email": "test@amazon.com",
        "password": "TestPassword123!"
      }
    ],
    "electricityServices": [
      {
        "serviceNumber": "1234567890",
        "consumerName": "Test Consumer"
      }
    ]
  },
  "testEnvironment": {
    "database": "mongodb://localhost:27017/personal-dashboard-test",
    "frontendUrl": "http://localhost:5174",
    "backendUrl": "http://localhost:4000",
    "timeout": 30000,
    "retries": 3
  }
}